"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[168],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(r),y=a,f=p["".concat(c,".").concat(y)]||p[y]||d[y]||o;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=y;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},91918:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=r(87462),a=(r(67294),r(3905));const o={sidebar_position:1},i="Getting Started",l={unversionedId:"Tutorials/Getting Started",id:"Tutorials/Getting Started",title:"Getting Started",description:"Your first Packet",source:"@site/docs/Tutorials/Getting Started.md",sourceDirName:"Tutorials",slug:"/Tutorials/Getting Started",permalink:"/ByteNet/docs/Tutorials/Getting Started",draft:!1,editUrl:"https://github.com/ffrostflame/bytenet/edit/master/docs/Tutorials/Getting Started.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"defaultSidebar",previous:{title:"Installation",permalink:"/ByteNet/docs/Installation"}},c={},s=[{value:"Your first Packet",id:"your-first-packet",level:2}],u={toc:s},p="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"getting-started"},"Getting Started"),(0,a.kt)("h2",{id:"your-first-packet"},"Your first Packet"),(0,a.kt)("p",null,"To actually make use of ByteNet, you'll first need to create a packet. Packets require a structure like so:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"local ByteNet = require(path.to.ByteNet)\n\nlocal myPacket = ByteNet.definePacket({\n    textField = ByteNet.dataTypes.string,\n})\n")),(0,a.kt)("p",null,"You might've noticed this, but ",(0,a.kt)("strong",{parentName:"p"},"you don't provide ByteNet a name.")," What gives? ByteNet is built around your networking structures being shared. Instead of relying on a name, ByteNet relies on your packet structure. So you'll want to create a ModuleScript under ReplicatedStorage to store your packets, instead of relying on individual scripts. For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'name="packets.luau"',name:'"packets.luau"'},'-- under ReplicatedStorage\nlocal ByteNet = require(path.to.ByteNet)\n\nreturn {\n    myPacket = ByteNet.definePacket("reliable", {\n        textField = ByteNet.dataTypes.string,\n    })\n}\n')),(0,a.kt)("p",null,"Great! Now we have a packet. Luckily, utilizing packets in ByteNet is extremely simple:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'-- On the server...\nlocal ByteNet = require(path.to.ByteNet)\nlocal packets = require(path.to.packets)\n\npackets.myPacket:listen(function(data, player)\n    print(`{ player.Name } said {data.textField}`)\nend)\n\n-- On the client..\nlocal ByteNet = require(path.to.ByteNet)\nlocal packets = require(path.to.packets)\n\npackets.myPacket:send({\n    textField = "Hello, world!"\n})\n')))}d.isMDXComponent=!0}}]);