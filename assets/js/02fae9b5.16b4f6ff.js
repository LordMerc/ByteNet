"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[331],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>y});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),s=c(r),f=a,y=s["".concat(p,".").concat(f)]||s[f]||d[f]||o;return r?n.createElement(y,l(l({ref:t},u),{},{components:r})):n.createElement(y,l({ref:t},u))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=f;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[s]="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},24948:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>l,default:()=>s,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var n=r(87462),a=(r(67294),r(3905));const o={},l="ByteNet v0.1.0",i={type:"mdx",permalink:"/ByteNet/",source:"@site/pages/index.md",title:"ByteNet v0.1.0",description:"An advanced, modern networking library for Roblox",frontMatter:{}},p=[{value:"An advanced, modern networking library for Roblox",id:"an-advanced-modern-networking-library-for-roblox",level:2},{value:"Features",id:"features",level:2},{value:"Performance",id:"performance",level:2},{value:"<strong>Speed</strong>",id:"speed",level:3},{value:"<strong>Bandwidth</strong>",id:"bandwidth",level:3}],c={toc:p},u="wrapper";function s(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"bytenet-v010"},"ByteNet v0.1.0"),(0,a.kt)("h2",{id:"an-advanced-modern-networking-library-for-roblox"},"An advanced, modern networking library for Roblox"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"features"},"Features"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Strictly typed in Luau"),(0,a.kt)("li",{parentName:"ul"},"Supports Reliability types"),(0,a.kt)("li",{parentName:"ul"},"Packets are structured in key-value pairs, except the keys are serialized away"),(0,a.kt)("li",{parentName:"ul"},"Written entirely w/ buffers (Compression woohoo)"),(0,a.kt)("li",{parentName:"ul"},"Queues events per-frame"),(0,a.kt)("li",{parentName:"ul"},"Ordered")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"performance"},"Performance"),(0,a.kt)("h3",{id:"speed"},(0,a.kt)("strong",{parentName:"h3"},"Speed")),(0,a.kt)("p",null,"ByteNet is incredibly performant, running ",(0,a.kt)("strong",{parentName:"p"},"purely")," on buffers with zero table manipulation."),(0,a.kt)("h3",{id:"bandwidth"},(0,a.kt)("strong",{parentName:"h3"},"Bandwidth")),(0,a.kt)("p",null,"ByteNet lets ",(0,a.kt)("strong",{parentName:"p"},"you")," specify exact data types, such as ",(0,a.kt)("strong",{parentName:"p"},"int8"),", ",(0,a.kt)("strong",{parentName:"p"},"uint32"),". Packet IDs are ",(0,a.kt)("strong",{parentName:"p"},"1 byte"),"."))}s.isMDXComponent=!0}}]);